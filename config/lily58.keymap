/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    macros {
        macro_copy: macro_copy {
            compatible = "zmk,behavior-macro";
            label = "macro_copy";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp C>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_paste: macro_paste {
            compatible = "zmk,behavior-macro";
            label = "macro_paste";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp V>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_cut: macro_cut {
            compatible = "zmk,behavior-macro";
            label = "macro_cut";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp X>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_cmd_space: macro_cmd_space {
            compatible = "zmk,behavior-macro";
            label = "macro_cmd_space";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LEFT_GUI>;
        };
        macro_arrow_function: macro_arrow_function {
            compatible = "zmk,behavior-macro";
            label = "macro_arrow_function";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp EQUAL>,
                <&macro_tap>,
                <&kp GREATER_THAN>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        ht_tp: hold_tap_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TAP_PREFERRED";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp &kp>;
        };
        td_arrow_function: tap_dance_arrow_function {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_ARROW_FUNCTION";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp SEMI>,
                <&macro_arrow_function>;
        };
        td_brackets_open: tap_dance_brackets_open {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKETS_OPEN";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp LEFT_PARENTHESIS>,
                <&kp LBKT>,
                <&kp LEFT_BRACE>;
        };
        td_brackets_close: tap_dance_brackets_close {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKETS_CLOSE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings =
                <&kp RIGHT_PARENTHESIS>,
                <&kp RBKT>,
                <&kp RIGHT_BRACE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        raycast {
            bindings = <&macro_cmd_space>;
            key-positions = <53 42>;
            layers = <0 3 1 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
          &kp ESC  &kp N1  &kp N2    &kp N3    &kp N4  &kp N5                                        &kp N6     &kp N7         &kp N8   &kp N9    &kp N0  &kp BACKSPACE
          &kp TAB   &kp Q   &kp W     &kp E     &kp R   &kp T                                         &kp Y      &kp U          &kp I    &kp O     &kp P      &kp MINUS
   &kp LEFT_SHIFT   &kp A   &kp S     &kp D     &kp F   &kp G                                         &kp H      &kp J          &kp K    &kp L  &kp SEMI        &kp SQT
 &kp LEFT_CONTROL   &kp Z   &kp X     &kp C     &kp V   &kp B   &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp BACKSLASH
                                   &kp LALT  &kp LGUI   &mo 1  &ht_tp LGUI SPACE            &kp RET   &mo 2  &kp GRAVE  &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
    &kp EQUAL      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                                         &trans    &trans    &trans   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP     &trans
 &kp LEFT_ALT            &kp F2        &kp F3        &kp F4        &kp F5      &kp F6                                         &kp F7    &kp F8    &kp UP             &kp F10          &kp F11    &kp F12
       &trans          &kp EXCL        &kp AT      &kp HASH    &kp DOLLAR   &kp PRCNT                                         &trans  &kp LEFT  &kp DOWN           &kp RIGHT         &kp RPAR  &kp GRAVE
       &trans  &ext_power EP_ON    &macro_cut   &macro_copy  &macro_paste      &trans  &td_brackets_open  &td_brackets_close  &trans    &trans    &trans  &td_arrow_function           &trans     &trans
                                                     &trans        &trans      &trans             &trans              &trans  &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
    &trans  &trans  &trans   &trans   &trans   &trans                                              &trans     &trans     &trans     &trans    &trans    &trans
 &kp GRAVE  &kp N1  &kp N2   &kp N3   &kp N4   &kp N5                                              &kp N6     &trans     &kp UP     &kp N9    &kp N0    &trans
    &trans  &kp F2  &kp F3   &kp F4   &kp F5   &kp F6                                              &trans   &kp LEFT   &kp DOWN  &kp RIGHT    &trans    &trans
    &trans  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &td_brackets_open  &td_brackets_close  &kp KP_PLUS  &kp MINUS  &kp EQUAL   &kp LBKT  &kp RBKT  &kp BSLH
                             &trans   &trans   &trans             &trans              &trans       &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
 &trans      &bt BT_SEL 0       &bt BT_SEL 1       &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR                  &trans    &trans    &trans     &trans  &trans  &trans
 &trans  &ext_power EP_ON  &ext_power EP_OFF  &ext_power EP_TOG        &trans      &trans                  &trans    &trans    &kp UP     &trans  &trans  &trans
 &trans   &rgb_ug RGB_TOG             &trans             &trans        &trans      &trans                  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
 &trans            &trans             &trans             &trans        &trans      &trans  &trans  &trans  &trans    &trans    &trans     &trans  &trans  &trans
                                                         &trans        &trans      &trans  &trans  &trans  &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
